# Script simples para push no Git
param(
    [string]$message = "Update autom√°tico - $(Get-Date -Format 'dd/MM/yyyy HH:mm')"
)

Write-Host "========================================" -ForegroundColor Green
Write-Host "   PUSH AUTOM√ÅTICO PARA GITHUB" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green

# Configura√ß√µes
$REPO_URL = "https://github.com/eduabjr/cartorio"
$BRANCH = "main"

# Verificar se o Git est√° instalado
try {
    git --version | Out-Null
    Write-Host "‚úÖ Git encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERRO: Git n√£o encontrado" -ForegroundColor Red
    exit 1
}

# Verificar se estamos em um reposit√≥rio Git
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Este diret√≥rio n√£o √© um reposit√≥rio Git!" -ForegroundColor Red
    Write-Host "Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
    
    git init
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå ERRO: Falha ao inicializar reposit√≥rio Git!" -ForegroundColor Red
        exit 1
    }
    
    Write-Host "‚úÖ Reposit√≥rio Git inicializado!" -ForegroundColor Green
}

# Configurar remote origin se n√£o existir
$currentRemoteUrl = git config --get remote.origin.url 2>$null
if ($LASTEXITCODE -ne 0 -or $currentRemoteUrl -ne $REPO_URL) {
    if ($currentRemoteUrl) {
        Write-Host "üîó Removendo remote 'origin' existente" -ForegroundColor Yellow
        git remote remove origin
    }
    Write-Host "üîó Adicionando remote 'origin'" -ForegroundColor Yellow
    git remote add origin $REPO_URL
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå ERRO: Falha ao configurar remote origin!" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Remote origin configurado!" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Remote origin j√° configurado" -ForegroundColor Green
}

# Adicionar todos os arquivos
Write-Host "üìÅ Adicionando arquivos..." -ForegroundColor Yellow
git add .
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå ERRO: Falha ao adicionar arquivos!" -ForegroundColor Red
    exit 1
}

# Verificar se h√° mudan√ßas para commitar
$changes = git diff --cached --name-only
if (-not $changes) {
    Write-Host "‚ÑπÔ∏è  Nenhuma mudan√ßa detectada para commitar." -ForegroundColor Yellow
} else {
    Write-Host "üìù Fazendo commit..." -ForegroundColor Yellow
    Write-Host "Mensagem: $message" -ForegroundColor Cyan
    
    git commit -m $message
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå ERRO: Falha ao fazer commit!" -ForegroundColor Red
        exit 1
    }
    Write-Host "‚úÖ Commit realizado com sucesso!" -ForegroundColor Green
}

# Fazer push para o reposit√≥rio
Write-Host "üöÄ Enviando para GitHub..." -ForegroundColor Yellow
git push origin $BRANCH

if ($LASTEXITCODE -eq 0) {
    Write-Host ""
    Write-Host "üéâ SUCESSO! C√≥digo enviado para GitHub!" -ForegroundColor Green
    Write-Host "üåê Reposit√≥rio: $REPO_URL" -ForegroundColor Cyan
    Write-Host "üåø Branch: $BRANCH" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "‚úÖ Push autom√°tico conclu√≠do com sucesso!" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ùå ERRO: Falha no push para GitHub!" -ForegroundColor Red
    Write-Host ""
    Write-Host "Poss√≠veis solu√ß√µes:" -ForegroundColor Yellow
    Write-Host "1. Verifique sua conex√£o com a internet" -ForegroundColor White
    Write-Host "2. Confirme suas credenciais do GitHub" -ForegroundColor White
    Write-Host "3. Verifique se o reposit√≥rio existe e voc√™ tem permiss√£o" -ForegroundColor White
    Write-Host ""
    exit 1
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Green
Write-Host "   PUSH CONCLU√çDO!" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green
