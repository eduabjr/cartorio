version: '3.8'

services:
  # Banco de dados MySQL - OTIMIZADO para Multi-Usuário
  mysql:
    image: mysql:8.0
    container_name: cartorio-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-cartorio}
      MYSQL_USER: ${MYSQL_USER:-cartorio}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-cartorio123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - cartorio-network
    # OTIMIZAÇÕES MYSQL
    command:
      - --max_connections=500
      - --innodb_buffer_pool_size=1G
      - --innodb_log_file_size=256M
      - --query_cache_type=1
      - --query_cache_size=64M
      - --tmp_table_size=64M
      - --max_heap_table_size=64M
      - --thread_cache_size=50
      - --table_open_cache=2048
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis para cache e sessões - OTIMIZADO
  redis:
    image: redis:7-alpine
    container_name: cartorio-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cartorio-network
    # OTIMIZAÇÕES REDIS
    command:
      - redis-server
      - --maxmemory 512mb
      - --maxmemory-policy allkeys-lru
      - --save 900 1
      - --save 300 10
      - --save 60 10000
      - --appendonly yes
      - --tcp-backlog 511
      - --timeout 300
      - --tcp-keepalive 300
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      interval: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Autenticação - OTIMIZADO
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: cartorio-auth-service
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key}
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Usuários - OTIMIZADO
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: cartorio-user-service
    restart: always
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3002
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Protocolos - OTIMIZADO
  protocolo-service:
    build:
      context: ./services
      dockerfile: protocolo-service/Dockerfile
    container_name: cartorio-protocolo-service
    restart: always
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3003
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Clientes - OTIMIZADO
  cliente-service:
    build:
      context: ./services
      dockerfile: cliente-service/Dockerfile
    container_name: cartorio-cliente-service
    restart: always
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3004
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3004/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Funcionários - OTIMIZADO
  funcionario-service:
    build:
      context: ./services
      dockerfile: funcionario-service/Dockerfile
    container_name: cartorio-funcionario-service
    restart: always
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3005
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço de Naturezas - OTIMIZADO
  natureza-service:
    build:
      context: ./services
      dockerfile: natureza-service/Dockerfile
    container_name: cartorio-natureza-service
    restart: always
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://${MYSQL_USER:-cartorio}:${MYSQL_PASSWORD:-cartorio123}@mysql:3306/${MYSQL_DATABASE:-cartorio}?connection_limit=20&pool_timeout=20&connect_timeout=10
      - PORT=3006
      - REDIS_URL=redis://redis:6379
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3006/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API Gateway - OTIMIZADO
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: cartorio-api-gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - PROTOCOLO_SERVICE_URL=http://protocolo-service:3003
      - CLIENTE_SERVICE_URL=http://cliente-service:3004
      - FUNCIONARIO_SERVICE_URL=http://funcionario-service:3005
      - NATUREZA_SERVICE_URL=http://natureza-service:3006
      - REDIS_URL=redis://redis:6379
    depends_on:
      - auth-service
      - user-service
      - protocolo-service
      - cliente-service
      - funcionario-service
      - natureza-service
      - redis
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      timeout: 5s
      retries: 3
      interval: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend (Nginx) - OTIMIZADO
  nginx:
    image: nginx:alpine
    container_name: cartorio-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - api-gateway
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus para monitoramento - OTIMIZADO
  prometheus:
    image: prom/prometheus:latest
    container_name: cartorio-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Grafana para dashboards - OTIMIZADO
  grafana:
    image: grafana/grafana:latest
    container_name: cartorio-grafana
    restart: always
    ports:
      - "3100:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_SERVER_ROOT_URL=http://localhost:3100
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - cartorio-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  cartorio-network:
    driver: bridge
