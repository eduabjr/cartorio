version: '3.8'

# Configurações específicas para Windows
x-common-variables: &common-variables
  COMPOSE_CONVERT_WINDOWS_PATHS: 1

services:
  # Banco de Dados
  postgres:
    image: postgres:15-alpine
    container_name: cartorio-postgres
    environment:
      POSTGRES_DB: cartorio_db
      POSTGRES_USER: cartorio_user
      POSTGRES_PASSWORD: cartorio_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - cartorio-network

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    container_name: cartorio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - cartorio-network

  # RabbitMQ para mensageria
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: cartorio-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: cartorio
      RABBITMQ_DEFAULT_PASS: cartorio_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - cartorio-network

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: cartorio-auth-service
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key
    ports:
      - "3001:3001"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    networks:
      - cartorio-network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: cartorio-user-service
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3002:3002"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - cartorio-network

  # Document Service
  document-service:
    build:
      context: ./services/document-service
      dockerfile: Dockerfile
    container_name: cartorio-document-service
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - cartorio-network

  # Registry Service
  registry-service:
    build:
      context: ./services/registry-service
      dockerfile: Dockerfile
    container_name: cartorio-registry-service
    environment:
      NODE_ENV: development
      PORT: 3004
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - cartorio-network

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: cartorio-payment-service
    environment:
      NODE_ENV: development
      PORT: 3005
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3005:3005"
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - cartorio-network

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: cartorio-notification-service
    environment:
      NODE_ENV: development
      PORT: 3006
      DATABASE_URL: postgresql://cartorio_user:cartorio_password@postgres:5432/cartorio_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://cartorio:cartorio_password@rabbitmq:5672
    ports:
      - "3006:3006"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - cartorio-network

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: cartorio-api-gateway
    environment:
      NODE_ENV: development
      PORT: 3000
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      DOCUMENT_SERVICE_URL: http://document-service:3003
      REGISTRY_SERVICE_URL: http://registry-service:3004
      PAYMENT_SERVICE_URL: http://payment-service:3005
      NOTIFICATION_SERVICE_URL: http://notification-service:3006
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - auth-service
      - user-service
      - document-service
      - registry-service
      - payment-service
      - notification-service
    networks:
      - cartorio-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cartorio-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3000
    ports:
      - "3007:3000"
    restart: unless-stopped
    depends_on:
      - api-gateway
    networks:
      - cartorio-network

  # Nginx
  nginx:
    image: nginx:alpine
    container_name: cartorio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    depends_on:
      - api-gateway
      - frontend
    networks:
      - cartorio-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  cartorio-network:
    driver: bridge